{"kind":"FETCH","data":{"headers":{"access-control-allow-credentials":"true","cache-control":"no-cache","connection":"keep-alive","content-encoding":"gzip","content-type":"application/json; charset=utf-8","date":"Tue, 15 Aug 2023 06:08:08 GMT","etag":"W/\"3ee2-wFab8rtiGdU2AF6KXP+wmZWI7+I\"","expires":"-1","keep-alive":"timeout=5","pragma":"no-cache","transfer-encoding":"chunked","vary":"Origin, Accept-Encoding","x-content-type-options":"nosniff","x-powered-by":"Express"},"body":"","status":200,"tags":["/blogs/page"],"url":"http://localhost:5000/blogs/"},"revalidate":31536000}