{"kind":"FETCH","data":{"headers":{"access-control-allow-credentials":"true","cache-control":"no-cache","connection":"keep-alive","content-encoding":"gzip","content-type":"application/json; charset=utf-8","date":"Tue, 15 Aug 2023 10:54:13 GMT","etag":"W/\"3eee-pBu2G1NQbWIRyh0L/nKB0Qj1N5I\"","expires":"-1","keep-alive":"timeout=5","pragma":"no-cache","transfer-encoding":"chunked","vary":"Origin, Accept-Encoding","x-content-type-options":"nosniff","x-powered-by":"Express"},"body":"","status":200,"tags":["/blogs/page","/page"],"url":"http://localhost:3002/blogs"},"revalidate":31536000}